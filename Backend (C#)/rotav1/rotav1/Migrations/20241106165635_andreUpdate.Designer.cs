// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using rotav1.Data;

#nullable disable

namespace rotav1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241106165635_andreUpdate")]
    partial class andreUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "status_enum", new[] { "Enviado", "Entregue", "Lido" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UsuarioContato", b =>
                {
                    b.Property<int>("Usuarioid")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioid");

                    b.Property<int>("Contatoid")
                        .HasColumnType("integer")
                        .HasColumnName("contatoid");

                    b.HasKey("Usuarioid", "Contatoid")
                        .HasName("usuario_contato_pkey");

                    b.HasIndex("Contatoid");

                    b.ToTable("usuario_contato", (string)null);
                });

            modelBuilder.Entity("rotav1.Models.Contato", b =>
                {
                    b.Property<int>("Contatoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("contatoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Contatoid"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.Property<string>("Numerowhatsapp")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("numerowhatsapp");

                    b.Property<int>("Usuarioid")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioid");

                    b.HasKey("Contatoid")
                        .HasName("contato_pkey");

                    b.HasIndex("Usuarioid");

                    b.ToTable("contato", (string)null);
                });

            modelBuilder.Entity("rotav1.Models.Mensagem", b =>
                {
                    b.Property<int>("Mensagemid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("mensagemid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Mensagemid"));

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("conteudo");

                    b.Property<int>("Destinatarioid")
                        .HasColumnType("integer")
                        .HasColumnName("destinatarioid");

                    b.Property<int>("Remetenteid")
                        .HasColumnType("integer")
                        .HasColumnName("remetenteid");

                    b.Property<DateTime?>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Mensagemid")
                        .HasName("mensagem_pkey");

                    b.HasIndex("Destinatarioid");

                    b.HasIndex("Remetenteid");

                    b.ToTable("mensagem", (string)null);
                });

            modelBuilder.Entity("rotav1.Models.Usuario", b =>
                {
                    b.Property<int>("Usuarioid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("usuarioid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Usuarioid"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Senhahash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("senhahash");

                    b.HasKey("Usuarioid")
                        .HasName("usuario_pkey");

                    b.HasIndex(new[] { "Email" }, "usuario_email_key")
                        .IsUnique();

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("rotav1.Models.UsuarioMensagem", b =>
                {
                    b.Property<int>("Usuarioid")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioid");

                    b.Property<int>("Mensagemid")
                        .HasColumnType("integer")
                        .HasColumnName("mensagemid");

                    b.Property<string>("Tiporelacionamento")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("tiporelacionamento");

                    b.HasKey("Usuarioid", "Mensagemid", "Tiporelacionamento")
                        .HasName("usuario_mensagem_pkey");

                    b.HasIndex("Mensagemid");

                    b.ToTable("usuario_mensagem", (string)null);
                });

            modelBuilder.Entity("UsuarioContato", b =>
                {
                    b.HasOne("rotav1.Models.Contato", null)
                        .WithMany()
                        .HasForeignKey("Contatoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("usuario_contato_contatoid_fkey");

                    b.HasOne("rotav1.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("Usuarioid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("usuario_contato_usuarioid_fkey");
                });

            modelBuilder.Entity("rotav1.Models.Contato", b =>
                {
                    b.HasOne("rotav1.Models.Usuario", "Usuario")
                        .WithMany("Contatos")
                        .HasForeignKey("Usuarioid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("contato_usuarioid_fkey");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("rotav1.Models.Mensagem", b =>
                {
                    b.HasOne("rotav1.Models.Usuario", "Destinatario")
                        .WithMany("MensagemDestinatarios")
                        .HasForeignKey("Destinatarioid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("mensagem_destinatarioid_fkey");

                    b.HasOne("rotav1.Models.Usuario", "Remetente")
                        .WithMany("MensagemRemetentes")
                        .HasForeignKey("Remetenteid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("mensagem_remetenteid_fkey");

                    b.Navigation("Destinatario");

                    b.Navigation("Remetente");
                });

            modelBuilder.Entity("rotav1.Models.UsuarioMensagem", b =>
                {
                    b.HasOne("rotav1.Models.Mensagem", "Mensagem")
                        .WithMany("UsuarioMensagems")
                        .HasForeignKey("Mensagemid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("usuario_mensagem_mensagemid_fkey");

                    b.HasOne("rotav1.Models.Usuario", "Usuario")
                        .WithMany("UsuarioMensagems")
                        .HasForeignKey("Usuarioid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("usuario_mensagem_usuarioid_fkey");

                    b.Navigation("Mensagem");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("rotav1.Models.Mensagem", b =>
                {
                    b.Navigation("UsuarioMensagems");
                });

            modelBuilder.Entity("rotav1.Models.Usuario", b =>
                {
                    b.Navigation("Contatos");

                    b.Navigation("MensagemDestinatarios");

                    b.Navigation("MensagemRemetentes");

                    b.Navigation("UsuarioMensagems");
                });
#pragma warning restore 612, 618
        }
    }
}
